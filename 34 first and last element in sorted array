class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
       int f=  first(nums,target);
        int l= last(nums,target);
    return{f,l};
    }
        int first(vector<int>&nums,int target)
        {
        int start=0;
        int end=nums.size()-1;
        int result=-1;
        while(start<=end)
        {
            int mid=start+(end-start)/2;
            if(nums[mid]==target){
                result=mid;
                end=mid-1;
            }
            else if(nums[mid]<target){
                start=mid+1;
            }
            else{
                end=mid-1;
            }
        }
        return result;
        }
        int last(vector<int>&nums,int target){
            int start=0;
        int end=nums.size()-1;
        int result2=-1;
        while(start<=end)
        {
            int mid=start+(end-start)/2;
            if(nums[mid]==target){
                result2=mid;
                start=mid+1;
            }
            else if(nums[mid]<target){
                start=mid+1;
            }
            else{
                end=mid-1;
            }
        }
        return result2;
        
        }

    
};
